
import java.util.Timer;
import java.util.TimerTask;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 549495
 */
public class TickTockFrame extends javax.swing.JFrame {

   Timer timer1, timer2, timer3;
   long interval1=1000;
   long interval2=1000;
   long interval3=1000;
   long tickCount1=0;
   long tickCount2=0;
   long tickCount3=0;
    
    
    public TickTockFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setInterval1(long i) {
       if (i>0) 
           interval1=i;
       else
           System.out.println("invalid interval1 value");
   }
    
      public void setInterval2(long i) {
       if (i>0) 
           interval2=i;
       else
           System.out.println("invalid interval2 value");
   } 
   
     public void setInterval3(long i) {
       if (i>0) 
           interval3=i;
       else
           System.out.println("invalid interval3 value");
   } 
      
    public void startTimer1() {
            if (timer1!=null)
                return;
            timer1=new Timer();
            timer1.schedule(new TimerTask() {
            public void run() {
                tick1();
            }
        }, 1000, interval1);
    }
    
    public void stopTimer1(){
        if (timer1==null)
            return;
        timer1.cancel();
        timer1=null;
    }
    
    public void tick1() {
        tickCount1++;
        System.out.println("tick1 " + tickCount1 + "...");
    }

        public void startTimer2() {
            if (timer2!=null)
                return;
            timer2=new Timer();
            timer2.schedule(new TimerTask() {
            public void run() {
                tick2();
            }
        }, 1000, interval2);
    }
    
    public void stopTimer2(){
        if (timer2==null)
            return;
        timer2.cancel();
        timer2=null;
    }
    
    public void tick2() {
        tickCount2++;
        System.out.println("tick2 " + tickCount2 + "...");
    }
    
    
    public void startTimer3() {
            if (timer3!=null)
                return;
            timer3=new Timer();
            timer3.schedule(new TimerTask() {
            public void run() {
                tick3();
            }
        }, 1000, interval3);
    }
    
    public void stopTimer3(){
        if (timer3==null)
            return;
        timer3.cancel();
        timer3=null;
    }
    
    public void tick3() {
        tickCount3++;
        System.out.println("tick3 " + tickCount3 + "...");
    
    }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TickTockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TickTockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TickTockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TickTockFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TickTockFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
